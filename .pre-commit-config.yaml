repos:
# Basic file hygiene (very fast)
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
        args: ['--maxkb=500']  # Stricter limit

# Security scanning (secret detection)
-   repo: https://github.com/trufflesecurity/trufflehog
    rev: v3.89.0
    hooks:
    -   id: trufflehog
        name: TruffleHog Secret Detection
        description: Detect hardcoded secrets in code
        entry: sh -c 'if command -v trufflehog >/dev/null 2>&1; then trufflehog git file://. --since-commit HEAD --only-verified --fail; else echo "⚠️  TruffleHog not installed locally - secret scanning will run in CI"; fi'
        language: system
        stages: [pre-commit]
        always_run: true

# Fast Go checks only
-   repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
    -   id: go-fmt
    -   id: go-vet
        exclude: "(internal/e2e/.*|internal/lint/.*)"
    -   id: go-mod-tidy

# Local fast checks
-   repo: local
    hooks:
    -   id: check-correlation-id
        name: Check for manual correlation_id formatting in logs
        entry: scripts/check-correlation-id.sh
        language: script
        types: [go]
        pass_filenames: false
    -   id: check-large-files
        name: Check for large Go files
        entry: scripts/check-large-files.sh
        language: script
        types: [go]
        pass_filenames: false
    -   id: check-licenses
        name: Check dependency license compliance
        entry: scripts/check-licenses.sh
        language: script
        files: ^(go\.mod|go\.sum)$
        pass_filenames: false
        description: Verify all Go dependencies use approved licenses
    -   id: validate-ci-config
        name: Validate GitHub Actions workflow configuration
        entry: scripts/validate-ci-config.sh
        language: script
        files: ^\.github/workflows/.*\.(yml|yaml)$
        pass_filenames: false

# Post-commit hooks (run after successful commit)
-   repo: local
    hooks:
    -   id: run-glance
        name: Run glance to update directory overviews
        entry: .pre-commit-hooks/run_glance.sh
        language: script
        stages: [post-commit]
        pass_filenames: false
        always_run: true
