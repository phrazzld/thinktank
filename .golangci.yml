# golangci-lint configuration file
# Reference: https://golangci-lint.run/usage/configuration/
# This configuration is based on best practices for Go projects

# Specify the configuration version explicitly
version: "2"

run:
  timeout: 5m
  tests: true
  skip-dirs:
    - vendor/
  skip-files:
    - ".*\\.generated\\.go$"

# Output configuration
output:
  format: colored-line-number
  sort-results: true

# Linter settings
linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true
  govet:
    check-shadowing: true
  goconst:
    min-len: 3
    min-occurrences: 3
  gocyclo:
    min-complexity: 15
  funlen:
    # Maximum function length
    lines: 100
    statements: 50
  revive:
    rules:
      - name: var-naming
        disabled: false
      - name: unexported-return
        disabled: true
  gosec:
    # Security-focused linter settings
    excludes:
      - G104 # Skip error checking in test files - enable ONLY for test files

# Linter selection
linters:
  disable-all: true
  enable:
    # Critical linters - always enabled
    - errcheck      # Detect unchecked errors
    - govet         # Go vet examines Go source code for suspicious constructs
    - ineffassign   # Detect ineffectual assignments
    - staticcheck   # Go static analysis tool
    - unused        # Check for unused constants, variables, functions and types

    # Formatting and style - note: we run fmt/imports separately via go fmt/pre-commit
    - revive        # Drop-in replacement for golint

    # Additional linters - code quality
    - bodyclose     # Check for unclosed HTTP response bodies
    - goconst       # Find repeated strings that could be constants
    - gocyclo       # Check function cyclomatic complexity
    - gosec         # Security audit
    - misspell      # Fix spelling errors
    - nolintlint    # Reports ill-formed or insufficient nolint directives
    - unconvert     # Remove unnecessary type conversions
    - unparam       # Find unused function parameters
    - whitespace    # Check for unnecessary whitespace

    # Extended linters (can be disabled if causing too many errors)
    - dogsled       # Find assignments with too many blank identifiers
    - durationcheck # Check for two durations multiplied together
    - funlen        # Check function length
    - makezero      # Find slice declarations with non-zero initial length
    - nakedret      # Find naked returns
    - prealloc      # Find slice declarations that could potentially be preallocated
    - predeclared   # Find code that shadows predeclared identifiers
    - thelper       # Detect test helpers without t.Helper()
    - tparallel     # Detect incorrect usage of t.Parallel()

issues:
  exclude-rules:
    # Exclude some linters from running on tests
    - path: _test\.go
      linters:
        - errcheck
        - gosec
        - funlen
        - thelper
        - tparallel
        - gocyclo

  # Maximum issues count per one linter
  max-issues-per-linter: 0

  # Maximum count of issues with the same text
  max-same-issues: 0

  # Fix found issues
  fix: false
