name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true

    - name: Verify formatting
      run: |
        go fmt ./...
        test -z "$(git diff --name-only)" || (echo "❌ Files need formatting. Run 'go fmt ./...'" && exit 1)

    - name: Lint
      run: go vet ./...

    - name: Debug Environment Variables
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      run: |
        echo "=== Environment Variable Debug Information ==="
        echo "Shell context:"
        echo "OPENROUTER_API_KEY length: ${#OPENROUTER_API_KEY}"
        echo "OPENROUTER_API_KEY set: $([ -n "$OPENROUTER_API_KEY" ] && echo 'YES' || echo 'NO')"
        echo ""
        echo "All relevant environment variables:"
        env | grep -E "(OPENROUTER|OPENAI|GEMINI|THINKTANK)" || echo "No relevant env vars found"
        echo ""
        echo "Go environment:"
        go env | grep -E "(OPENROUTER|OPENAI|GEMINI|THINKTANK)" || echo "No relevant Go env vars found"
        echo ""
        echo "Simple Go program test:"
        cat > /tmp/env_test.go << 'EOF'
        package main
        import ("fmt"; "os")
        func main() {
            val := os.Getenv("OPENROUTER_API_KEY")
            fmt.Printf("Go os.Getenv result: length=%d, set=%t\n", len(val), val != "")
        }
        EOF
        go run /tmp/env_test.go

    - name: Test
      env:
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      run: go test -race -short -timeout 5m ./...

    - name: Build
      run: go build -v ./cmd/thinktank

  # Optional security scan on main branch only
  security:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'
