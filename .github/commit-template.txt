# <type>[optional scope]: <short description>
# |<---- Using a maximum of 72 characters ---->|
#
# Examples:
#   feat: add user authentication
#   fix(parser): handle edge case in JSON parsing
#   docs: update API reference documentation
#   style: format code according to linting rules
#   refactor: simplify validation logic
#   test: add unit tests for config parser
#   chore: update dependencies
#   perf: improve algorithm performance
#   ci: update GitHub workflow configuration
#   build: modify build scripts
#
# --- COMMIT END ---
# Type can be:
#   feat     (new feature)
#   fix      (bug fix)
#   docs     (documentation changes)
#   style    (formatting, missing semicolons, etc; no code change)
#   refactor (refactoring code, e.g., renaming a variable; no behavior change)
#   test     (adding missing tests, refactoring tests; no prod code change)
#   chore    (updating grunt tasks etc; no prod code change)
#   perf     (performance improvements)
#   ci       (CI/CD related changes)
#   build    (build system or external dependencies)
#
# For BREAKING CHANGES, add an ! after the type/scope:
#   feat!: change user authentication API
#   refactor(auth)!: remove deprecated methods
#
# Optional longer description. Wrapped at 72 characters.
# Use blank lines to separate paragraphs.
#
# - Include motivation for the change and contrast with previous behavior
# - Explain why the change was necessary
# - Include relevant context
#
# --- COMMIT END ---
# Optional footer. Wrapped at 72 characters.
#
# BREAKING CHANGE: <describe the breaking change here>
# DEPRECATED: <what is deprecated>
# REMOVED: <what is removed>
# ADDED: <what is added>
# CHANGED: <what changed>
# SECURITY: <security related changes>
#
# For issues:
# Fixes #123, #456
# Closes #321
# Related to #789
#
# --- COMMIT END ---
# Guidelines:
# - Use the imperative mood in the subject line
# - Do not end the subject line with a period
# - Separate subject from body with a blank line
# - Use the body to explain what and why vs. how
# - Use the footer to reference issues and include breaking changes
